clusterID: ""
organization: ""

global:
  # All Apps will be installed in this namespace unless overridden below.
  namespace: "security-bundle"

# User values can be provided via a ConfigMap or Secret for each individual app
# using the structure shown below.

userConfig:
  exceptionRecommender:
    configMap:
      values:
        global:
          podSecurityStandards:
            enforced: true
        recommender:
          createNamespace: false
  falco:
    configMap:
      values:
        global:
          podSecurityStandards:
            enforced: true
        falco:
          falco-exporter:
            podSecurityPolicy:
              create: false
  jiralert:
    configMap:
      values:
        global:
          podSecurityStandards:
            enforced: true
  kyverno:
    configMap:
      values:
        global:
          podSecurityStandards:
            enforced: true
        crds:
          install: false
  kyvernoCrds:
    configMap:
      values:
        global:
          podSecurityStandards:
            enforced: true
  kyvernoPolicies:
    configMap:
      values:
        kyverno-policies:
          validationFailureAction: Enforce
  kyvernoPolicyOperator:
    configMap:
      values:
        global:
          podSecurityStandards:
            enforced: true
  trivy:
    configMap:
      values:
        trivy:
          rbac:
            pspEnabled: false
  trivyOperator:
    configMap:
      values:
        rbac:
          pspEnabled: false

apps:
  cloudnativePG:
    appName: cloudnative-pg
    chartName: cloudnative-pg
    catalog: giantswarm-operations-platform
    enabled: false
    namespace: giantswarm
    # used by renovate
    # repo: giantswarm/cloudnative-pg-app
    version: 0.0.10

  edgedb:
    appName: edgedb
    chartName: edgedb
    catalog: giantswarm-operations-platform
    dependsOn: cloudnative-pg
    enabled: false
    namespace: policy-system
    # used by renovate
    # repo: giantswarm/edgedb-app
    version: 0.1.0

  exceptionRecommender:
    appName: exception-recommender
    chartName: exception-recommender
    catalog: giantswarm
    dependsOn: kyverno-crds
    enabled: false
    # namespace: security-bundle
    # used by renovate
    # repo: giantswarm/exception-recommender
    version: 0.1.1

  falco:
    appName: falco
    chartName: falco
    catalog: giantswarm
    enabled: false
    # namespace: security-bundle
    # used by renovate
    # repo: giantswarm/falco-app
    version: 0.10.0

  jiralert:
    appName: jiralert
    chartName: jiralert
    catalog: giantswarm
    enabled: false
    # namespace: security-bundle
    # used by renovate
    # repo: giantswarm/jiralert-app
    version: 0.1.3

  kyverno:
    appName: kyverno
    chartName: kyverno
    catalog: giantswarm
    dependsOn: kyverno-crds
    enabled: true
    namespace: kyverno
    # Options allow to configure timeouts:
    # https://docs.giantswarm.io/getting-started/app-platform/installation-configuration/
    options:
      install:
        timeout: 15m
      upgrade:
        timeout: 15m
    # used by renovate
    # repo: giantswarm/kyverno-app
    version: 0.19.0

  kyvernoCrds:
    appName: kyverno-crds
    chartName: kyverno-crds
    catalog: giantswarm
    enabled: true
    namespace: kyverno
    # used by renovate
    # repo: giantswarm/kyverno-crds
    version: 1.13.1

  kyvernoPolicyOperator:
    appName: kyverno-policy-operator
    chartName: kyverno-policy-operator
    catalog: giantswarm
    dependsOn: kyverno-crds
    enabled: true
    # namespace: security-bundle
    # used by renovate
    # repo: giantswarm/kyverno-policy-operator
    version: 0.0.11

  # Kyverno policies for Kubernetes Pod Security Standards (PSS).
  # From: https://github.com/giantswarm/kyverno-policies/
  kyvernoPolicies:
    appName: kyverno-policies
    chartName: kyverno-policies
    catalog: giantswarm
    dependsOn: kyverno-crds
    enabled: true
    namespace: kyverno
    # used by renovate
    # repo: giantswarm/kyverno-policies
    version: 0.23.0

  policyApiCrds:
    appName: policy-api-crds
    chartName: policy-api-crds
    catalog: giantswarm
    dependsOn: kyverno-policy-operator
    enabled: false
    namespace: policy-system
    # used by renovate
    # repo: giantswarm/policy-api
    version: 0.0.6

  reportsServer:
    appName: reports-server
    chartName: reports-server
    catalog: giantswarm-operations-platform
    dependsOn: cloudnative-pg
    enabled: false
    namespace: kyverno
    # used by renovate
    # repo: giantswarm/reports-server-app
    version: 0.0.2

  starboardExporter:
    appName: starboard-exporter
    chartName: starboard-exporter
    catalog: giantswarm
    enabled: false
    namespace: security-bundle
    # used by renovate
    # repo: giantswarm/starboard-exporter
    version: 0.8.1

  trivy:
    appName: trivy
    chartName: trivy
    catalog: giantswarm
    enabled: false
    # namespace: security-bundle
    # used by renovate
    # repo: giantswarm/trivy-app
    version: 0.13.4

  trivyOperator:
    appName: trivy-operator
    chartName: trivy-operator
    catalog: giantswarm
    enabled: false
    # namespace: security-bundle
    # used by renovate
    # repo: giantswarm/trivy-operator-app
    version: 0.10.3

# Security Platform Log Collection Configuration
securityObservability:
  # Enable centralized log collection for security platform components
  enabled: true
  
  # Components already covered by default (in giantswarm namespace):
  # athena, dex, falco-exporter, falco-sidekick
  
  podLogs:
    # Kyverno Policy Engine - ALL COMPONENTS (all logs - safe, no sensitive data)
    # Includes: admission-controller, background-controller, cleanup-controller, reports-controller
    kyverno:
      enabled: true
      name: kyverno-logs
      namespace: kyverno
      description: "Log collection for all Kyverno policy engine components (admission, background, cleanup, reports controllers)"
      logLevel: "all"
      dataSensitivity: "safe"
      namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kyverno
      selector:
        matchExpressions:
        - key: app.kubernetes.io/part-of
          operator: In
          values: ["kyverno"]
      relabelings:
      - action: replace
        replacement: giantswarm
        targetLabel: giantswarm_observability_tenant
      - action: replace
        sourceLabels: [__meta_kubernetes_pod_node_name]
        targetLabel: node_name
      - action: replace
        replacement: kyverno
        targetLabel: component
      - action: replace
        sourceLabels: [__meta_kubernetes_pod_label_app_kubernetes_io_component]
        targetLabel: kyverno_component

    # cert-manager (all logs - safe, certificate management only)
    certManager:
      enabled: true
      name: cert-manager-logs
      namespace: kube-system
      description: "Log collection for cert-manager certificate management components"
      logLevel: "all"
      dataSensitivity: "safe"
      namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      selector:
        matchExpressions:
        - key: app.kubernetes.io/name
          operator: In
          values: ["cert-manager"]
      relabelings:
      - action: replace
        replacement: giantswarm
        targetLabel: giantswarm_observability_tenant
      - action: replace
        sourceLabels: [__meta_kubernetes_pod_node_name]
        targetLabel: node_name
      - action: replace
        replacement: cert-manager
        targetLabel: component

    # Kyverno Policy Operator (all logs - safe, policy metadata only)
    kyvernoPolicyOperator:
      enabled: true
      name: kyverno-policy-operator-logs
      namespace: security-bundle
      description: "Log collection for Kyverno Policy Operator in security-bundle namespace"
      logLevel: "all"
      dataSensitivity: "safe"
      namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: security-bundle
      selector:
        matchLabels:
          app.kubernetes.io/name: kyverno-policy-operator
      relabelings:
      - action: replace
        replacement: giantswarm
        targetLabel: giantswarm_observability_tenant
      - action: replace
        sourceLabels: [__meta_kubernetes_pod_node_name]
        targetLabel: node_name
      - action: replace
        replacement: kyverno-policy-operator
        targetLabel: component

    # Falco - ERROR LOGS ONLY (contains sensitive customer runtime security data)
    falcoErrors:
      enabled: true
      name: falco-errors-logs
      namespace: giantswarm
      description: "ERROR-ONLY log collection for Falco (filters sensitive runtime data)"
      logLevel: "errors-only"
      dataSensitivity: "high"
      reasonForFiltering: "Falco detects runtime security threats and logs contain sensitive customer workload information"
      namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: giantswarm
      selector:
        matchLabels:
          app.kubernetes.io/name: falco
      pipelineStages:
      - match:
          selector: '{job="giantswarm/falco-errors"}'
          stages:
          - regex:
              expression: '.*(?P<level>ERROR|FATAL|WARN|WARNING).*'
          - labels:
              level:
          - drop:
              expression: '(?i).*(info|debug|notice).*'
              dropReason: "Filtering out non-error logs - Falco contains sensitive runtime security data"
      relabelings:
      - action: replace
        replacement: giantswarm
        targetLabel: giantswarm_observability_tenant
      - action: replace
        sourceLabels: [__meta_kubernetes_pod_node_name]
        targetLabel: node_name
      - action: replace
        replacement: falco-errors-only
        targetLabel: component

    # Trivy Operator - ERROR LOGS ONLY (contains sensitive vulnerability scan data)
    trivyOperatorErrors:
      enabled: true
      name: trivy-operator-errors-logs
      namespace: giantswarm
      description: "ERROR-ONLY log collection for Trivy Operator (filters sensitive vulnerability data)"
      logLevel: "errors-only"
      dataSensitivity: "high"
      reasonForFiltering: "Trivy Operator scans container images for vulnerabilities and logs contain sensitive security findings"
      namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: giantswarm
      selector:
        matchLabels:
          app.kubernetes.io/name: trivy-operator
      pipelineStages:
      - match:
          selector: '{job="giantswarm/trivy-operator-errors"}'
          stages:
          - regex:
              expression: '.*(?P<level>ERROR|FATAL|WARN|WARNING).*'
          - labels:
              level:
          - drop:
              expression: '(?i).*(info|debug|notice).*'
              dropReason: "Filtering out non-error logs - Trivy Operator contains sensitive vulnerability scan data"
      relabelings:
      - action: replace
        replacement: giantswarm
        targetLabel: giantswarm_observability_tenant
      - action: replace
        sourceLabels: [__meta_kubernetes_pod_node_name]
        targetLabel: node_name
      - action: replace
        replacement: trivy-operator-errors-only
        targetLabel: component

    # Trivy Scanner - ERROR LOGS ONLY (contains sensitive scan results)
    trivyErrors:
      enabled: true
      name: trivy-errors-logs
      namespace: giantswarm
      description: "ERROR-ONLY log collection for Trivy Scanner (filters sensitive scan content)"
      logLevel: "errors-only"
      dataSensitivity: "high"
      reasonForFiltering: "Trivy scanner processes container images and logs contain detailed vulnerability scan results"
      namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: giantswarm
      selector:
        matchLabels:
          app.kubernetes.io/name: trivy
      pipelineStages:
      - match:
          selector: '{job="giantswarm/trivy-errors"}'
          stages:
          - regex:
              expression: '.*(?P<level>ERROR|FATAL|WARN|WARNING).*'
          - labels:
              level:
          - drop:
              expression: '(?i).*(info|debug|notice).*'
              dropReason: "Filtering out non-error logs - Trivy contains sensitive vulnerability scan content"
      relabelings:
      - action: replace
        replacement: giantswarm
        targetLabel: giantswarm_observability_tenant
      - action: replace
        sourceLabels: [__meta_kubernetes_pod_node_name]
        targetLabel: node_name
      - action: replace
        replacement: trivy-errors-only
        targetLabel: component

    # Starboard Exporter - ERROR LOGS ONLY (contains sensitive security scan data)
    starboardExporterErrors:
      enabled: true
      name: starboard-exporter-errors-logs
      namespace: security-bundle
      description: "ERROR-ONLY log collection for Starboard Exporter (filters sensitive security scan results)"
      logLevel: "errors-only"
      dataSensitivity: "high"
      reasonForFiltering: "Starboard Exporter processes and exports security scan results containing sensitive vulnerability information"
      namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: security-bundle
      selector:
        matchLabels:
          app.kubernetes.io/name: starboard-exporter
      pipelineStages:
      - match:
          selector: '{job="security-bundle/starboard-exporter-errors"}'
          stages:
          - regex:
              expression: '.*(?P<level>ERROR|FATAL|WARN|WARNING).*'
          - labels:
              level:
          - drop:
              expression: '(?i).*(info|debug|notice).*'
              dropReason: "Filtering out non-error logs - Starboard Exporter contains sensitive security scan results"
      relabelings:
      - action: replace
        replacement: giantswarm
        targetLabel: giantswarm_observability_tenant
      - action: replace
        sourceLabels: [__meta_kubernetes_pod_node_name]
        targetLabel: node_name
      - action: replace
        replacement: starboard-exporter-errors-only
        targetLabel: component